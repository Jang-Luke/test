/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2023-04-26 01:28:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <title>Title</title>\n");
      out.write("  <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css' rel='stylesheet'>\n");
      out.write("\n");
      out.write("  <script src='https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js'></script>\n");
      out.write("  <script src='https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js'></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class='container-fluid'>\n");
      out.write("  <div class='row'>\n");
      out.write("    <div class='col-12'>\n");
      out.write("      <fieldset>\n");
      out.write("        <legend>기본 AJAX</legend>\n");
      out.write("        <button id='ajax1'>테스트</button>\n");
      out.write("        <button id='ajax2'>테스트</button>\n");
      out.write("        <button id='ajax3'>테스트</button>\n");
      out.write("        <button id='ajax4'>테스트</button>\n");
      out.write("        <button id='ajax5'>테스트</button>\n");
      out.write("        <br>\n");
      out.write("        <hr>\n");
      out.write("        <input type=\"file\" name=\"file\">\n");
      out.write("        <button id='ajax6'>테스트</button>\n");
      out.write("      </fieldset>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("<script>\n");
      out.write("    document.querySelector('#ajax1').addEventListener('click', function () {\n");
      out.write("        fetch('/exam01.fetch', {\n");
      out.write("            method: 'POST',\n");
      out.write("            headers: {\n");
      out.write("                'Content-type': 'application/json'\n");
      out.write("            },\n");
      out.write("            body: JSON.stringify({\n");
      out.write("                title: 'test',\n");
      out.write("                body: 'I am testing!',\n");
      out.write("                userId: 1\n");
      out.write("            })\n");
      out.write("        }).then((response) => response.json())\n");
      out.write("            .then((data) => console.log(data))\n");
      out.write("    });\n");
      out.write("    document.querySelector('#ajax2').addEventListener('click', function () {\n");
      out.write("        fetch('/exam02.fetch', {\n");
      out.write("            method: 'POST',\n");
      out.write("            headers: {\n");
      out.write("                Accept: 'application/json',\n");
      out.write("                'Content-type': 'application/json'\n");
      out.write("            },\n");
      out.write("            body: JSON.stringify({\n");
      out.write("                title: 'exam02 테스트',\n");
      out.write("                myName: '내 이름?'\n");
      out.write("            })\n");
      out.write("        }).then((response) => {\n");
      out.write("            console.log(response);\n");
      out.write("            return response.json();\n");
      out.write("        })\n");
      out.write("            .then((data) => console.log(data));\n");
      out.write("    });\n");
      out.write("    $('#ajax3').on('click', function () {\n");
      out.write("        $.ajax({\n");
      out.write("            url: \"/exam03.fetch\",\n");
      out.write("            method: \"POST\",\n");
      out.write("            data: {\n");
      out.write("                id: \"113\",\n");
      out.write("                name: \"GilUng\",\n");
      out.write("                contact: \"secrete\"\n");
      out.write("            },\n");
      out.write("            dataType: \"json\"\n");
      out.write("        }).done((result) => {\n");
      out.write("            console.log(result);\n");
      out.write("            console.log(result.name);\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("    $('#ajax4').on('click', function () {\n");
      out.write("        $.ajax({\n");
      out.write("            url: \"/exam04.fetch\",\n");
      out.write("            dataType: \"json\"\n");
      out.write("        }).done((result) => console.log(result));\n");
      out.write("    });\n");
      out.write("    $('#ajax5').on('click', function () {\n");
      out.write("        $.ajax({\n");
      out.write("            url: \"/exam05.fetch\",\n");
      out.write("            dataType: \"json\"\n");
      out.write("        }).done((result) => {\n");
      out.write("            console.log(result);\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("    $('#ajax6').on('click', function () {\n");
      out.write("        const fileInput = $('input[type=file]')[0];\n");
      out.write("        const file = fileInput.files[0];\n");
      out.write("        if (!file) {\n");
      out.write("            alert('파일을 먼저 선택해야 합니다.');\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("        let formData = new FormData();\n");
      out.write("        formData.append(\"file\", file);\n");
      out.write("        $.ajax({\n");
      out.write("            url: \"/exam06.fetch\",\n");
      out.write("            type: \"POST\",\n");
      out.write("            data: formData,\n");
      out.write("            processData: false,\n");
      out.write("            contentType: false,\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
